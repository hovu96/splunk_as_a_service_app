<dashboard script="performance_test.js" stylesheet="performance_test.css">
  <label>Performance Test</label>
  <row>
    <panel>
      <table>
        <title>General Information</title>
        <search id="status_search">
          <query>| rest splunk_server=local services/saas/performance_test/$test_id$ | fields - splunk_server id | table status *</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
          <refresh>10s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Test Cases</title>
        <search>
          <query>| rest splunk_server=local services/saas/performance_test_items/$test_id$ | fields - splunk_server id index search_template | table status stack_id *</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
          <refresh>10s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="count">100</option>
        <option name="drilldown">none</option>
        <option name="rowNumbers">true</option>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="searches_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="searches_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="indexer_var_storage_in_gb">
          <colorPalette type="minMidMax" maxColor="#62B3B2" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="etc_storage_in_gb">
          <colorPalette type="minMidMax" maxColor="#62B3B2" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="searches_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="status">
          <colorPalette type="map">{"Running":#53A051,"Finished":#006D9C,"Stopping":#53A051,"Starting":#53A051}</colorPalette>
        </format>
        <format type="color" field="data_volume_in_gb_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="cpu_per_instance">
          <colorPalette type="minMidMax" maxColor="#006D9C" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="searches_per_day">
          <colorPalette type="minMidMax" maxColor="#DC4E41" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="indexer_var_storage_in_gb">
          <colorPalette type="minMidMax" maxColor="#62B3B2" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="etc_storage_in_gb">
          <colorPalette type="minMidMax" maxColor="#62B3B2" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <format type="color" field="other_var_storage_in_gb">
          <colorPalette type="minMidMax" maxColor="#62B3B2" minColor="#FFFFFF"></colorPalette>
          <scale type="minMidMax"></scale>
        </format>
        <drilldown>
          <condition field="stack_id">
            <link>stack?id=$row.stack_id$</link>
          </condition>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>CPU Usage</title>
      <chart>
        <title>Indexer Tier</title>
        <search>
          <query>| mstats avg(_value) as usage WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.cpu.usage_rate" "index"="em_metrics" `pod_filter_for_performance_test($test_id$,pod-name,indexer)` BY pod-name `span_for_performance_test($test_id$)`
| append [
| mstats avg(_value) as limit WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.cpu.request" index="em_metrics" `pod_filter_for_performance_test($test_id$,name,indexer)` BY name `span_for_performance_test($test_id$)`
| rename name as pod-name
]
| rename pod-name as instance

| stats avg(usage) as usage min(limit) as limit by _time instance

| lookup instances _key as instance OUTPUT stack_id
| `overlap_performance_test_cases(stack_id)`

| streamstats limit=0 last(limit) as limit2 last(usage) as usage2 by instance
| eval limit = coalesce(limit,limit2)
| eval usage = coalesce(usage,usage2)
| fields - limit2 usage2
| eval usage_pct = (usage / limit) * 100

| timechart limit=0 `span_for_performance_test($test_id$)` max(usage_pct) as usage by case</query>
          <earliest>0</earliest>
          <latest></latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">none</option>
      </chart>
      <chart>
        <title>Search Head Tier</title>
        <search>
          <query>| mstats avg(_value) as usage WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.cpu.usage_rate" "index"="em_metrics" `pod_filter_for_performance_test($test_id$,pod-name,search-head)` BY pod-name `span_for_performance_test($test_id$)`
| append [
| mstats avg(_value) as limit WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.cpu.request" index="em_metrics" `pod_filter_for_performance_test($test_id$,name,search-head)` BY name `span_for_performance_test($test_id$)`
| rename name as pod-name
]
| rename pod-name as instance

| stats avg(usage) as usage min(limit) as limit by _time instance

| lookup instances _key as instance OUTPUT stack_id
| `overlap_performance_test_cases(stack_id)`

| streamstats limit=0 last(limit) as limit2 last(usage) as usage2 by instance
| eval limit = coalesce(limit,limit2)
| eval usage = coalesce(usage,usage2)
| fields - limit2 usage2
| eval usage_pct = (usage / limit) * 100

| timechart limit=0 `span_for_performance_test($test_id$)` max(usage_pct) as usage by case</query>
          <earliest>0</earliest>
          <latest></latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">none</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Memory Usage</title>
      <chart>
        <title>Indexer Tier</title>
        <search>
          <query>| mstats avg(_value) as usage WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.memory.usage_bytes" "index"="em_metrics" `pod_filter_for_performance_test($test_id$,pod-name,indexer)` BY pod-name `span_for_performance_test($test_id$)`
| append [
| mstats avg(_value) as request WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.memory.request" index="em_metrics" `pod_filter_for_performance_test($test_id$,name,indexer)` BY name `span_for_performance_test($test_id$)`
| rename name as pod-name
]
| rename pod-name as instance
| eval usage=usage/1024/1024

| stats avg(usage) as usage min(request) as request by _time instance

| lookup instances _key as instance OUTPUT stack_id
| `overlap_performance_test_cases(stack_id)`

| streamstats limit=0 last(request) as request2 last(usage) as usage2 by instance
| eval request = coalesce(request,request2)
| eval usage = coalesce(usage,usage2)
| fields - request2 usage2
| eval usage_pct = (usage / request) * 100

| timechart limit=0 `span_for_performance_test($test_id$)` max(usage_pct) as usage by case</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
      </chart>
      <chart>
        <title>Search Head Tier</title>
        <search>
          <query>| mstats avg(_value) as usage WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.memory.usage_bytes" "index"="em_metrics" `pod_filter_for_performance_test($test_id$,pod-name,search-head)` BY pod-name `span_for_performance_test($test_id$)`
| append [
| mstats avg(_value) as request WHERE `time_range_filter_for_performance_test($test_id$)` metric_name="kube.pod.memory.request" index="em_metrics" `pod_filter_for_performance_test($test_id$,name,search-head)` BY name `span_for_performance_test($test_id$)`
| rename name as pod-name
]
| rename pod-name as instance
| eval usage=usage/1024/1024

| stats avg(usage) as usage min(request) as request by _time instance

| lookup instances _key as instance OUTPUT stack_id
| `overlap_performance_test_cases(stack_id)`

| streamstats limit=0 last(request) as request2 last(usage) as usage2 by instance
| eval request = coalesce(request,request2)
| eval usage = coalesce(usage,usage2)
| fields - request2 usage2
| eval usage_pct = (usage / request) * 100

| timechart limit=0 `span_for_performance_test($test_id$)` max(usage_pct) as usage by case</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.legend.placement">right</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Data Ingest</title>
      <chart>
        <title>Thruput (in GB/day)</title>
        <search>
          <query>`time_range_filter_for_performance_test($test_id$)` `host_filter_for_performance_test($test_id$,indexer)` index="_internal" source=*metrics.log group=thruput name=index_thruput
| bin `span_for_performance_test($test_id$)` _time
| stats avg(instantaneous_kbps) as kbps by _time host
| lookup instances host OUTPUT stack_id
| `overlap_performance_test_cases(stack_id)`
| eval gb_per_day = (kbps*60*60*24)/1024/1024
| timechart limit=0 fixedrange=0 `span_for_performance_test($test_id$)` sum(gb_per_day) as gb_per_day by case</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
      <chart>
        <title>Processing Queues Fill Ratio</title>
        <search>
          <query>`time_range_filter_for_performance_test($test_id$)` `host_filter_for_performance_test($test_id$,indexer)` index="_internal" source=*metrics.log group=queue (name=parsingqueue OR name=aggqueue OR name=typingqueue OR name=indexqueue)
| lookup instances host OUTPUT stack_id
| `overlap_performance_test_cases(stack_id)`

| eval max=if(isnotnull(max_size_kb),max_size_kb,max_size)
| eval curr=if(isnotnull(current_size_kb),current_size_kb,current_size)
| eval fill_perc=round((curr/max)*100,2)

| bin `span_for_performance_test($test_id$)` _time
| stats median(fill_perc) as fill_perc by _time name case host
| stats max(fill_perc) as fill_perc by _time case host
| stats avg(fill_perc) as fill_perc by _time case

| timechart limit=0 fixedrange=0 `span_for_performance_test($test_id$)` avg(fill_perc) as fill_perc by case</query>
          <earliest>0</earliest>
          <latest></latest>
          <sampleRatio>1</sampleRatio>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
      <chart>
        <title>Generator Health</title>
        <search>
          <query>`time_range_filter_for_performance_test($test_id$)` index="em_meta" sourcetype="kube:objects:pods" "metadata.labels.app"="datagen" "metadata.labels.test"="$test_id$" 
| `overlap_performance_test_cases(metadata.labels.stack)`
| eval not_ready = if('status.containerStatuses{}.ready'=="true",0,1) 
| eval ready = if('status.containerStatuses{}.ready'=="true",1,0) 
| bin `span_for_performance_test($test_id$)` _time
| stats sum(ready) as ready sum(not_ready) as not_ready by _time case
| eval total = not_ready + ready
| eval readyness = (ready / total) * 100
| timechart limit=0 fixedrange=0 `span_for_performance_test($test_id$)` avg(readyness) as readyness by case</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Searches</title>
      <chart>
        <title>Executions (in number/day)</title>
        <search>
          <query>`time_range_filter_for_performance_test($test_id$)` `host_filter_for_performance_test($test_id$,search-head)` info=granted index=_audit action=search search_id=* 
| bin span=1m _time
| lookup instances host OUTPUT stack_id
| stats dc(search_id) as searches_per_min by _time stack_id
| eval searches_per_day = searches_per_min*60*24
| `overlap_performance_test_cases(stack_id)`
| timechart limit=0 fixedrange=0 `span_for_performance_test($test_id$)` avg(searches_per_day) as searches_per_day by case</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
      <chart>
        <title>Generator Health</title>
        <search>
          <query>`time_range_filter_for_performance_test($test_id$)` index="em_meta" sourcetype="kube:objects:pods" "metadata.labels.app"="searchgen" "metadata.labels.test"="$test_id$" 
| `overlap_performance_test_cases(metadata.labels.stack)`
| eval not_ready = if('status.containerStatuses{}.ready'=="true",0,1) 
| eval ready = if('status.containerStatuses{}.ready'=="true",1,0) 
| bin `span_for_performance_test($test_id$)` _time
| stats sum(ready) as ready sum(not_ready) as not_ready by _time case
| eval total = not_ready + ready
| eval readyness = (ready / total) * 100
| timechart limit=0 fixedrange=0 `span_for_performance_test($test_id$)` avg(readyness) as readyness by case</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
          <refresh>30s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisY.maximumNumber">100</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.chart">column</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Events</title>
        <search>
          <query>`time_range_filter_for_performance_test($test_id$)` sourcetype="performance_test" performance_test_id="$test_id$" eventtype=performance_test_info | rename performance_test_log_level as level _raw as message | table _time level message | sort - _time</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
          <refresh>10s</refresh>
          <refreshType>delay</refreshType>
        </search>
        <option name="count">10</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">none</option>
        <format type="color" field="level">
          <colorPalette type="map">{"WARNING":#F8BE34,"INFO":#53FF51,"ERROR":#DC4E41,"DEBUG":#708794}</colorPalette>
        </format>
        <format type="color" field="level">
          <colorPalette type="map">{"WARNING":#F8BE34,"INFO":#53FF51,"ERROR":#DC4E41,"DEBUG":#708794}</colorPalette>
        </format>
        <format type="color" field="level">
          <colorPalette type="map">{"WARNING":#F8BE34,"INFO":#53FF51,"ERROR":#DC4E41,"DEBUG":#708794}</colorPalette>
        </format>
        <format type="color" field="level">
          <colorPalette type="map">{"WARNING":#F8BE34,"INFO":#53FF51,"ERROR":#DC4E41,"DEBUG":#708794}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
</dashboard>