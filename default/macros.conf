[pod_filter_for_performance_test(3)]
args = test_id,pod_field,role
definition = [\
| makeresults | eval test_id="$test_id$"\
| lookup performance_test_cases test_id OUTPUT stack_id\
| mvexpand stack_id\
| lookup instances stack_id OUTPUT _key as instance\
| mvexpand instance\
| lookup instances _key as instance OUTPUT role\
| search role="$role$"\
| rename instance as $pod_field$ \
| fields $pod_field$\
| format\
]
iseval = 0

[host_filter_for_performance_test(2)]
args = test_id,role
definition = [\
| makeresults | eval test_id="$test_id$"\
| lookup performance_test_cases test_id OUTPUT stack_id\
| mvexpand stack_id\
| lookup instances stack_id OUTPUT _key as instance, host\
| mvexpand instance\
| lookup instances _key as instance OUTPUT role\
| search role="$role$"\
| fields host\
| format\
]
iseval = 0

[time_range_filter_for_performance_test(1)]
args = test_id
definition = [\
| makeresults | eval test_id="$test_id$"\
| lookup performance_tests _key as test_id OUTPUT time_created,time_finished\
| eval time_finished=coalesce(time_finished,now())\
| eval time_finished=time_finished+10\
| rename time_created as earliest time_finished as latest\
| fields earliest latest\
| format "" "" "" "" "" ""\
]
iseval = 0


[span_for_performance_test(1)]
args = test_id
definition = [\
| makeresults | eval test_id="$test_id$"\
| lookup performance_tests _key as test_id OUTPUT run_duration\
| eval span=case(run_duration<120,"1m",run_duration<250,"2m",run_duration<500,"5m",run_duration<1000,"10m",run_duration<60000,"60m",run_duration<12000,"120m",run_duration<30000,"300m",run_duration<72000,"720m",1==1,"1d")\
| return span\
]
iseval = 0


[overlap_performance_test_cases(1)]
args = stack_id_field
definition = \
lookup performance_test_cases stack_id as $stack_id_field$ OUTPUT _key as case_id, time_started_running, time_finished_running, index as case_index\
| where isnotnull(time_started_running)\
| eval time_finished_running=coalesce(time_finished_running,now())\
| where _time>=time_started_running and _time<=time_finished_running\
| eventstats earliest(time_started_running) as start_time\
| eval duration = time_finished_running-time_started_running\
| eval diff_time = time_started_running-start_time\
| eval _time = _time-diff_time\
| eval case =  "# " + tostring(case_index+1)
iseval = 0
