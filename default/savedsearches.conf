[check_clusters]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */10 * * * *
enableSched = 1
search = | endpoint path="check_clusters"

[update_license_slaves_lookup]
cron_schedule = * * * * *
enableSched = 1
schedule_window = auto
search = | rest services/licenser/slaves | rex field=label "splunk-(?<stack_id>\w+)-" | where isnotnull(stack_id) | table stack_id title | lookup license_slaves _key as title OUTPUT stack_id as existing_stack_id | where isnull(existing_stack_id) | outputlookup append=1 key_field=title license_slaves

[update_instances_lookup]
cron_schedule = * * * * *
enableSched = 1
schedule_window = auto
dispatch.earliest_time = -10m
dispatch.latest_time  = now
search = index="em_meta" sourcetype="kube:objects:pods" "metadata.labels.app"="splunk" | dedup metadata.name | rename metadata.name as _key metadata.labels.for as stack_id metadata.labels.type as role | lookup instances _key OUTPUT stack_id as existing_stack_id | where isnull(existing_stack_id) | table _key stack_id role | outputlookup append=1 key_field=name instances

[update_stacks_summary]
cron_schedule = * * * * *
enableSched = 1
schedule_window = auto
search = | rest splunk_server=local services/saas/stacks | collect index=summary marker="search_name=update_stacks_summary"

[update_apps_summary]
cron_schedule = * * * * *
enableSched = 1
schedule_window = auto
search = | rest splunk_server=local services/saas/apps | collect index=summary marker="search_name=update_apps_summary"

